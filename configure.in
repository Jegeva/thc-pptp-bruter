dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/pptp_bruter.c)
VER=`cat ${srcdir}/VERSION`
AC_MSG_RESULT(Begining autoconfiguration process for THC-pptp-bruter-$VER...)

AC_CONFIG_AUX_DIR(config)

AM_INIT_AUTOMAKE(THC-pptp-bruter, $VER)
AM_CONFIG_HEADER(config.h)

dnl Checks for programs.

AC_PROG_CC
AC_PROG_INSTALL

if test $ac_cv_prog_gcc = yes; then
	CCOPTS='-O2 -Wall'
	CFLAGS="$CCOPTS"
fi
test "x$prefix" != "xNONE" || prefix="/usr/local"
test "x$exec_prefix" != "xNONE" || exec_prefix="${prefix}"
trydir_i="${prefix}/include"
trydir_l="${prefix}/lib"

LDFLAGS="$LDFLAGS -L${prefix}/lib"
CPPFLAGS="$CPPFLAGS -I${prefix}/include"
dnl Always include /usr/local/*
if test "${prefix}" != "/usr/local" ; then
	trydir_i="${trydir_i} /usr/local/include"
	trydir_l="${trydir_l} /usr/local/lib"
fi
dnl trydir_i="${trydir_i} ${prefix}/openssl/include"
dnl trydir_l="${trydir_l} ${prefix}/openssl/lib"

AC_ARG_WITH(includes,
[  --with-includes=DIR     Space-seperated list of include directories],
[
	trydir_i="$trydir_i ${withval}"
])
for xincdir in $trydir_i ; do
	if test ! -d "$xincdir" ; then
		continue;
	fi
	INCLUDES="$INCLUDES -I${xincdir}";
done
CPPFLAGS="${INCLUDES} $CPPFLAGS"

AC_ARG_WITH(libs,
[  --with-libs=DIR         Space-seperated list of library directories],
[
	trydir_l="$trydir_l ${withval}"
])
for xlibdir in $trydir_l ; do
	if test ! -d "$xlibdir" ; then
		continue;
	fi
	LIBDIR="$LIBDIR -L${xlibdir}";
done
LDFLAGS="${LIBDIR} $LDFLAGS"



dnl Checks for libraries.
AC_CHECK_LIB(util, main)

AC_CHECK_LIB(crypto, main,, AC_MSG_ERROR(OpenSSL crypto library missing.))
AC_CHECK_LIB(ssl, SSL_accept,, AC_MSG_ERROR(OpenSSL library missing.)) 

AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(nsl, gethostbyname)


dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h strings.h sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME

dnl Checks for library functions.
AC_CHECK_FUNCS(select socket)

AC_OUTPUT(Makefile src/Makefile)
